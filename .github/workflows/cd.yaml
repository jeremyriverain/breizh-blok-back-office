name: cd

on:
  push:
    branches:
      - main

jobs:
  main:
    name: main
    runs-on: ubuntu-22.04
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - uses: "google-github-actions/auth@v2"
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT_ID_TEST }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_TEST }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_CLOUD_STORAGE_TEST }}
      - name: build
        env:
          GCLOUD_PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID_TEST}}
          GCLOUD_BUCKET_ID: ${{secrets.GCLOUD_BUCKET_ID_TEST}}
        run: |
          docker compose build --build-arg UID=$(id -u) --build-arg GID=$(id -g) --no-cache
          docker compose up -d

          echo -e "\nGCLOUD_PROJECT_ID=$GCLOUD_PROJECT_ID" >> symfony/.env
          echo "GCLOUD_BUCKET_ID=${{github.run_id}}--$GCLOUD_BUCKET_ID" >> symfony/.env
          echo "GOOGLE_APPLICATION_CREDENTIALS=/var/www/symfony/google_credentials.json" >> symfony/.env
          cat symfony/.env

          mv gha-creds*.json symfony/google_credentials.json

          docker compose exec -T php bash -c "composer install"
      - name: prepare deploy
        run: echo $HOSTS | base64 -d > deploy_hosts.php
        env:
          HOSTS: ${{secrets.HOSTS}}
      - name: deploy
        env:
          HOSTS: ${{secrets.HOSTS}}
        uses: deployphp/action@v1
        with:
          dep: deploy
          private-key: ${{ secrets.PRIVATE_KEY }}
          verbosity: -vvv
          deployer-version: "6.9.0"
